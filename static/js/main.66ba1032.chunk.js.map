{"version":3,"sources":["components/LeagueCard/index.js","hooks/useDataStatus.js","utils/fetcher.js","pages/MainPage/MainPage.js","components/CompetitionCard/index.js","pages/CompetitionPage/CompetitionPage.js","App.js","index.js"],"names":["LeagueCard","league","CustomLink","React","forwardRef","props","ref","to","id","style","textDecoration","Grid","item","xs","component","Paper","elevation","container","direction","spacing","justifyContent","Typography","area","name","Date","currentSeason","startDate","toDateString","endDate","useDataStatus","url","useState","data","setData","error","setError","useEffect","fetch","method","headers","process","then","res","json","fetcher","catch","msg","MainPage","Container","Box","my","variant","competitions","map","el","CompetitionCard","competition","md","p","alignContent","Divider","currentMatchday","emblemUrl","src","height","alt","seasons","winner","CompetitionPage","useParams","console","log","darkTheme","createTheme","palette","type","App","ThemeProvider","theme","CssBaseline","basename","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.66ba1032.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport const LeagueCard = ({ league }) => {\n  const CustomLink = React.forwardRef((props, ref) => (\n    <RouterLink\n      ref={ref}\n      to={`/competition/${league.id}`}\n      {...props}\n      style={{ textDecoration: \"none\" }}\n    />\n  ));\n\n  return (\n    <Grid item key={league.id} xs={12} component={CustomLink}>\n      <Paper elevation={3}>\n        <Grid\n          container\n          direction=\"row\"\n          spacing={2}\n          justifyContent=\"space-around\"\n        >\n          <Grid item xs={3}>\n            <Typography>{league.area.name}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>{league.name}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>\n              {new Date(league.currentSeason.startDate).toDateString()} /{\" \"}\n              {new Date(league.currentSeason.endDate).toDateString()}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport fetcher from \"../utils/fetcher\";\n\nexport const useDataStatus = (url) => {\n  //potentially add a loader status for spinner\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    fetcher(url)\n      .then((data) => setData(data))\n      .catch(() =>\n        setError({ msg: \"Нет ответа от сервера, привышен лимит запросов\" })\n      );\n  }, [url]);\n  return { data, error };\n};\n","//options could be extended\n\nexport default function fetcher(url) {\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"X-Auth-Token\": process.env.REACT_APP_TOKEN,\n    },\n  }).then((res) => res.json());\n}\n","import { Container, Grid, Typography, Box } from \"@material-ui/core\";\nimport { LeagueCard } from \"../../components/LeagueCard\";\nimport { useDataStatus } from \"../../hooks/useDataStatus\";\n\nexport const MainPage = () => {\n  const { data, error } = useDataStatus(\n    \"https://api.football-data.org/v2/competitions?area=2077&plan=TIER_ONE\"\n  );\n\n  return (\n    <Container>\n      <Box my={2}>\n        <Typography variant=\"h3\">Список Соревнований</Typography>\n      </Box>\n      <Grid container spacing={4}>\n        {data &&\n          data.competitions.map((el) => {\n            return <LeagueCard key={el.id} league={el} />;\n          })}\n        {error && error.msg}\n      </Grid>\n    </Container>\n  );\n};\n","import { Grid, Paper, Typography, Box, Divider } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const CompetitionCard = ({ competition }) => {\n  return (\n    <Grid container direction=\"row\" spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={3}>\n          <Box p={2}>\n            <Grid\n              container\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"flex-start\"\n              alignContent=\"center\"\n            >\n              <Grid item container direction=\"column\" spacing={2} xs={9} md={8}>\n                <Grid item>\n                  <Typography>Ближайшее событие</Typography>\n                </Grid>\n                <Divider />\n                <Grid item>\n                  <Typography>{competition.name}</Typography>\n                </Grid>\n                <Grid item>\n                  <Typography>Страна: {competition.area.name}</Typography>\n                </Grid>\n                <Grid item>\n                  <Typography>\n                    Начало:{\" \"}\n                    {new Date(\n                      competition.currentSeason.startDate\n                    ).toDateString()}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  {\" \"}\n                  <Typography>\n                    Конец:{\" \"}\n                    {new Date(competition.currentSeason.endDate).toDateString()}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography>\n                    Матчей: {competition.currentSeason.currentMatchday}\n                  </Typography>\n                </Grid>\n              </Grid>\n              {competition.emblemUrl && (\n                <Grid item xs={2}>\n                  <img src={competition.emblemUrl} height=\"50px\" alt=\"\"></img>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={3}>\n          <Box p={2}>\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography>Предыдущие сезоны</Typography>\n              </Grid>\n              <Divider />\n              {competition.seasons.map((el) => {\n                return (\n                  <Grid key={el.id} item container xs={12} direction=\"column\">\n                    <Grid item>\n                      <Typography>\n                        Даты: {el.startDate} - {el.endDate}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography>\n                        Победитель: {el?.winner?.name || \"нет информации\"}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography>\n                        Матчей: {el.currentMatchday || \"нет информации\"}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import { Container, Typography, Box } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { CompetitionCard } from \"../../components/CompetitionCard\";\nimport { useDataStatus } from \"../../hooks/useDataStatus\";\n\nexport const CompetitionPage = () => {\n  const { id } = useParams();\n\n  const { data, error } = useDataStatus(\n    `https://api.football-data.org/v2/competitions/${id}`\n  );\n\n  console.log(data);\n\n  return (\n    <Container>\n      <Box my={2}>\n        <Typography variant=\"h3\">Подробности Соревнования</Typography>\n      </Box>\n      {error && error.msg}\n      {data && <CompetitionCard competition={data} />}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { MainPage, CompetitionPage } from \"./pages/index\";\nimport { CssBaseline, createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst darkTheme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <BrowserRouter basename=\"/football-app\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/competition/:id\" component={CompetitionPage} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./App\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}