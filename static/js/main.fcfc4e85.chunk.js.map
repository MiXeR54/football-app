{"version":3,"sources":["components/LeagueCard/index.js","hooks/useDataStatus.js","utils/fetcher.js","pages/MainPage/MainPage.js","components/CompetitionCard/index.js","pages/CompetitionPage/CompetitionPage.js","App.js","index.js"],"names":["LeagueCard","league","CustomLink","React","forwardRef","props","ref","to","id","style","textDecoration","Grid","item","xs","component","Paper","elevation","container","direction","spacing","justifyContent","Typography","area","name","Date","currentSeason","startDate","toDateString","endDate","useDataStatus","url","useState","data","setData","error","setError","useEffect","fetch","method","headers","process","then","res","json","fetcher","catch","msg","MainPage","Container","Box","my","variant","competitions","map","el","CompetitionCard","competition","md","p","alignContent","Divider","currentMatchday","emblemUrl","src","height","alt","seasons","winner","CompetitionPage","useParams","console","log","darkTheme","createTheme","palette","type","App","ThemeProvider","theme","CssBaseline","basename","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcfc4e85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport const LeagueCard = ({ league }) => {\r\n  const CustomLink = React.forwardRef((props, ref) => (\r\n    <RouterLink\r\n      ref={ref}\r\n      to={`/competition/${league.id}`}\r\n      {...props}\r\n      style={{ textDecoration: \"none\" }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Grid item key={league.id} xs={12} component={CustomLink}>\r\n      <Paper elevation={3}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          spacing={2}\r\n          justifyContent=\"space-around\"\r\n        >\r\n          <Grid item xs={3}>\r\n            <Typography>{league.area.name}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography>{league.name}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Typography>\r\n              {new Date(league.currentSeason.startDate).toDateString()} /{\" \"}\r\n              {new Date(league.currentSeason.endDate).toDateString()}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport fetcher from \"../utils/fetcher\";\r\n\r\nexport const useDataStatus = (url) => {\r\n  //potentially add a loader status for spinner\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    fetcher(url)\r\n      .then((data) => setData(data))\r\n      .catch(() =>\r\n        setError({ msg: \"Нет ответа от сервера, привышен лимит запросов\" })\r\n      );\r\n  }, [url]);\r\n  return { data, error };\r\n};\r\n","//options could be extended\r\n\r\nexport default function fetcher(url) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-Auth-Token\": process.env.REACT_APP_TOKEN,\r\n    },\r\n  }).then((res) => res.json());\r\n}\r\n","import { Container, Grid, Typography, Box } from \"@material-ui/core\";\r\nimport { LeagueCard } from \"../../components/LeagueCard\";\r\nimport { useDataStatus } from \"../../hooks/useDataStatus\";\r\n\r\nexport const MainPage = () => {\r\n  const { data, error } = useDataStatus(\r\n    \"http://api.football-data.org/v2/competitions?area=2077&plan=TIER_ONE\"\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Box my={2}>\r\n        <Typography variant=\"h3\">Список Соревнований</Typography>\r\n      </Box>\r\n      <Grid container spacing={4}>\r\n        {data &&\r\n          data.competitions.map((el) => {\r\n            return <LeagueCard key={el.id} league={el} />;\r\n          })}\r\n        {error && error.msg}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import { Grid, Paper, Typography, Box, Divider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const CompetitionCard = ({ competition }) => {\r\n  return (\r\n    <Grid container direction=\"row\" spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Paper elevation={3}>\r\n          <Box p={2}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"flex-start\"\r\n              alignContent=\"center\"\r\n            >\r\n              <Grid item container direction=\"column\" spacing={2} xs={9} md={8}>\r\n                <Grid item>\r\n                  <Typography>Ближайшее событие</Typography>\r\n                </Grid>\r\n                <Divider />\r\n                <Grid item>\r\n                  <Typography>{competition.name}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>Страна: {competition.area.name}</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>\r\n                    Начало:{\" \"}\r\n                    {new Date(\r\n                      competition.currentSeason.startDate\r\n                    ).toDateString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {\" \"}\r\n                  <Typography>\r\n                    Конец:{\" \"}\r\n                    {new Date(competition.currentSeason.endDate).toDateString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography>\r\n                    Матчей: {competition.currentSeason.currentMatchday}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              {competition.emblemUrl && (\r\n                <Grid item xs={2}>\r\n                  <img src={competition.emblemUrl} height=\"50px\" alt=\"\"></img>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Paper elevation={3}>\r\n          <Box p={2}>\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography>Предыдущие сезоны</Typography>\r\n              </Grid>\r\n              <Divider />\r\n              {competition.seasons.map((el) => {\r\n                return (\r\n                  <Grid key={el.id} item container xs={12} direction=\"column\">\r\n                    <Grid item>\r\n                      <Typography>\r\n                        Даты: {el.startDate} - {el.endDate}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography>\r\n                        Победитель: {el?.winner?.name || \"нет информации\"}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography>\r\n                        Матчей: {el.currentMatchday || \"нет информации\"}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Container, Typography, Box } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CompetitionCard } from \"../../components/CompetitionCard\";\r\nimport { useDataStatus } from \"../../hooks/useDataStatus\";\r\n\r\nexport const CompetitionPage = () => {\r\n  const { id } = useParams();\r\n\r\n  const { data, error } = useDataStatus(\r\n    `http://api.football-data.org/v2/competitions/${id}`\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <Container>\r\n      <Box my={2}>\r\n        <Typography variant=\"h3\">Подробности Соревнования</Typography>\r\n      </Box>\r\n      {error && error.msg}\r\n      {data && <CompetitionCard competition={data} />}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { MainPage, CompetitionPage } from \"./pages/index\";\r\nimport { CssBaseline, createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline />\r\n      <BrowserRouter basename=\"/football-app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route exact path=\"/competition/:id\" component={CompetitionPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nrender(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}